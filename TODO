:: 0n1riKa ::   TODOs & Ideas:

REMEMBER:

- Data-oriented design! (how to do this in C#? structs + static methods maybe?)
  (think hard about using objects for _world_ objects, using composition and messaging and trying to eliminate inheritance)
- Simple is better than complex
- Beautiful is better than ugly
- Explicit is better than implicit
- http://gameprogrammingpatterns.com. Try to adapt the good ideas to a data-oriented design



...



ENGINE:

- Hotloading of data AND code changes
- Game state & input recording & recall
- Support window resizing with content stretching
- MIDI/input control for any component parameter (for video DJing)


EDITOR:

- Multimonitor
- Shadertoy emu
- Debug: Game objects are flagged in red in all scene views when they throw exceptions / spit out errors
- Easy MIDI/input learn assignment

